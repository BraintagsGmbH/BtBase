<?xml version="1.0" encoding="UTF-8"?>
<!-- Use this root-element to get auto-tag-completion (if your eclipse has 
	support for this) -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<!-- The model version of this pom-file. Currently its always 4.0.0 -->
	<modelVersion>4.0.0</modelVersion>
	<version>16-SNAPSHOT</version>

	<!-- The groupId defines the group for this project Core-Projects goes to 
		"de.braintags" Features goes to "de.braintags.feature" Applications goes 
		to "de.braintags.apps" -->
	<groupId>de.braintags</groupId>
	<!-- The artifactId is the name of this project. It will be used for naming 
		the jar too -->
	<artifactId>btBasePOM</artifactId>
	<!-- The version of this project Append "-SNAPSHOT" to version make it a 
		snapshot -->
	<!-- Packaging is the type of this project "pom" = This Project is only 
		a configuring project with no real jar or else "jar" = This Project will 
		be build a jar -->
	<packaging>pom</packaging>

	<!-- Human readable name of this project -->
	<name>Braintags Default POM</name>

	<!-- Short Information about the company -->
	<organization>
		<name>Braintags GmbH</name>
		<url>http://www.braintags.de</url>
	</organization>
	<url>https://github.com/BraintagsGmbH/BtBase</url>
	<description>basic POM for projects of Braintags</description>

	<licenses>
		<license>
			<name>Eclipse Public License - v 1.0</name>
			<url>http://www.eclipse.org/legal/epl-v10.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<!-- https://github.com/BraintagsGmbH/BtBase.git -->
	<scm>
		<url>https://github.com/BraintagsGmbH/BtBase</url>
		<connection>scm:git:git://github.com/BraintagsGmbH/BtBase.git</connection>
		<developerConnection>scm:git:git@github.com:BraintagsGmbH/BtBase.git</developerConnection>
  </scm>
  

	<properties>
		<testjar.skip>true</testjar.skip>
		<doc.skip>true</doc.skip>
		<maven.test.skip>true</maven.test.skip>
		<!-- We skip sources jar generation as we do it with the assembly plugin 
			to have greater control over the content -->
		<source.skip>true</source.skip>
		
		<!--  Skipping sonar qube? -->
		<sonar.skip>false</sonar.skip>
		<sonar.language>java</sonar.language>
		<sonar.host.url>http://sqube.bt-rz.net</sonar.host.url>
		
		<!--  signing can be switched off for SNAPSHOT -->
		<sign.skip>false</sign.skip>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Compiler plugin -->
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<javadocSourceFileInclude>de/braintags/**/*.java</javadocSourceFileInclude>

		<!-- dependency versions -->
		<log4j.version>1.2.17</log4j.version>
		

		<!-- Plugin versions -->
		<sonar-jacoco-listeners>3.8</sonar-jacoco-listeners>
		<jacoco.version>0.7.7.201606060606</jacoco.version>
		<jacoco.minimum>0.60</jacoco.minimum>
		<jacoco.haltOnFailure>true</jacoco.haltOnFailure>
		<sonar.java.source>1.8</sonar.java.source>
		<!-- We use 3.1 until this is resolved https://jira.codehaus.org/browse/MCOMPILER-236 -->
		<maven.compiler.plugin.version>3.1</maven.compiler.plugin.version>
		<maven.jar.plugin.version>2.5</maven.jar.plugin.version>
		<maven.source.plugin.version>2.4</maven.source.plugin.version>
		<maven.resource.plugin.version>2.7</maven.resource.plugin.version>
		<maven.javadoc.plugin.version>2.10.1</maven.javadoc.plugin.version>
		<maven.dependency.plugin.version>2.9</maven.dependency.plugin.version>
		<maven.clean.plugin.version>2.6.1</maven.clean.plugin.version>
		<maven.deploy.plugin.version>2.8.2</maven.deploy.plugin.version>
		<maven.install.plugin.version>2.5.2</maven.install.plugin.version>
		<maven.site.plugin.version>3.4</maven.site.plugin.version>
		<maven.surefire.plugin.version>2.18</maven.surefire.plugin.version>
		<maven.surefire.report.plugin.version>2.18</maven.surefire.report.plugin.version>
		<maven.enforcer.plugin.version>1.3.1</maven.enforcer.plugin.version>
		<maven-project-info-reports-plugin>2.9</maven-project-info-reports-plugin>
		<sonar-maven-plugin>3.0.1</sonar-maven-plugin>
		
	</properties>
	
	<dependencies>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
        <dependency>
          <groupId>org.sonarsource.java</groupId>
          <artifactId>sonar-jacoco-listeners</artifactId>
          <version>${sonar-jacoco-listeners}</version>
          <scope>test</scope>
        </dependency>
	</dependencies>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.plugin.version}</version>
					<configuration>
						<optimize>true</optimize>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven.source.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven.jar.plugin.version}</version>
					<executions>
						<execution>
							<id>default-jar</id>
							<configuration>
								<archive>
									<!-- Generate a jar INDEX.LIST -->
									<index>true</index>
									<!-- Add the Maven coordinates in the manifest -->
									<manifestEntries>
										<Maven-Group-Id>${project.groupId}</Maven-Group-Id>
										<Maven-Artifact-Id>${project.artifactId}</Maven-Artifact-Id>
										<Maven-Version>${project.version}</Maven-Version>
									</manifestEntries>
								</archive>
								<!-- Remove examples and docoverride -->
								<excludes>
									<exclude>/docoverride/**</exclude>
									<exclude>/examples/**</exclude>
								</excludes>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven.surefire.plugin.version}</version>
					<configuration>
						<!-- Testing shall be executed by one Suites, which are calling each other test class -->
						<includes>
							<include>**/TestAll*.java</include>
						</includes>
						<failIfNoSpecifiedTests>false</failIfNoSpecifiedTests>
						<systemPropertyVariables>
							<io.netty.leakDetectionLevel>PARANOID</io.netty.leakDetectionLevel>
							<mailClientUserName>${mailClientUserName}</mailClientUserName>
                			<mailClientPassword>${mailClientPassword}</mailClientPassword>
						</systemPropertyVariables>
			              <properties>
			                <property>
			                  <name>listener</name>
			                  <value>org.sonar.java.jacoco.JUnitListener</value>
			                </property>
			              </properties>
						<argLine>-server -Xmx1200M</argLine>
						<forkCount>1</forkCount>
						<reuseForks>true</reuseForks>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${maven.surefire.report.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven.site.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven.javadoc.plugin.version}</version>
					<!-- Remove impl and keep only io/vertx files (no examples or docoverride) -->
					<configuration>
						<additionalparam>-Xdoclint:none</additionalparam>
						<sourceFileExcludes>
							<sourceFileExclude>**/package-info.java</sourceFileExclude>
							<sourceFileExclude>**/impl/**</sourceFileExclude>
						</sourceFileExcludes>
						<sourceFileIncludes>
							<sourceFileInclude>${javadocSourceFileInclude}</sourceFileInclude>
						</sourceFileIncludes>
					</configuration>
				</plugin>


				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven.resource.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven.dependency.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven.install.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven.deploy.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven.clean.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven.enforcer.plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		
		
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<useReleaseProfile>false</useReleaseProfile>
					<releaseProfiles>release</releaseProfiles>
					<goals>deploy</goals>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
						<configuration>
							<skip>${sign.skip}</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.6</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<failIfNoSpecifiedTests>false</failIfNoSpecifiedTests>
					<systemPropertyVariables>
						<io.netty.leakDetectionLevel>PARANOID</io.netty.leakDetectionLevel>
					</systemPropertyVariables>
					<!-- Needs to be small enough to run in a EC2 1.7GB small instance -->
					<argLine>${argLine} -server -Xmx1200M</argLine>
					<forkCount>1</forkCount>
					<reuseForks>true</reuseForks>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<!-- implementation is needed only for Maven 2 -->
								<rule implementation="org.jacoco.maven.RuleConfiguration">
									<element>BUNDLE</element>
									<limits>
										<!-- implementation is needed only for Maven 2 -->
										<limit implementation="org.jacoco.report.check.Limit">
											<counter>COMPLEXITY</counter>
											<value>COVEREDRATIO</value>
											<minimum>${jacoco.minimum}</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
	      <plugin>
	        <groupId>org.sonarsource.scanner.maven</groupId>
	        <artifactId>sonar-maven-plugin</artifactId>
	        <version>${sonar-maven-plugin}</version>
		   <executions>
		        <execution>
		            <id>s1</id>
		            <phase>install</phase>
		            <goals>
		                <goal>sonar</goal>
		            </goals>
		            <configuration>
		              <skip>${sonar.skip}</skip>
		            </configuration>
		        </execution>
		    </executions>
	      </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
							<goal>test-jar</goal>
						</goals>
						<configuration>
							<skip>${source.skip}</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-test-jar</id>
						<goals>
							<goal>test-jar</goal>
						</goals>
						<configuration>
							<skip>${testjar.skip}</skip>
						</configuration>

					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>sonatype-oss-release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<executions>
							<execution>
								<id>enforce-no-vertx-snapshots</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<requireReleaseDeps>
											<message>No Vert.x Snapshots Allowed during a release!</message>
											<includes>
												<include>de.braintags.io.vertx:*</include>
											</includes>
										</requireReleaseDeps>
									</rules>
									<fail>true</fail>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>


	<!-- This section allows to define WHO are the developers behind these projects -->
	<developers>
		<developer>
			<id>mremme</id>
			<name>Michael Remme</name>
			<email>mremme@braintags.de</email>
			<organization>Braintags GmbH</organization>
			<organizationUrl>http://www.braintags.de</organizationUrl>
			<roles>
				<role>Master Java Developer</role>
				<role>Owner</role>
				<role>Founder</role>
			</roles>
		</developer>
		<developer>
			<id>mrau</id>
			<name>Martin Rau</name>
			<email>martin.rau@braintags.de</email>
			<organization>Braintags GmbH</organization>
			<organizationUrl>http://www.braintags.de</organizationUrl>
			<roles>
				<role>Java Developer</role>
				<role>Master of Desaster</role>
				<role>Cookie Master</role>
			</roles>
		</developer>
	</developers>

	
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven-project-info-reports-plugin}</version>
				<reportSets>
					<reportSet>
						<reports>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
</project>
